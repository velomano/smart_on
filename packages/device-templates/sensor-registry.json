{
  "metadata": {
    "version": "1.0.0",
    "description": "Universal IoT Device Registry - 80/20 Principle",
    "coverage": "상위 빈도 모델 80% 커버리지 목표",
    "supportedInterfaces": ["i2c", "onewire", "analog", "digital", "pwm", "uart"]
  },
  "sensors": [
    {
      "category": "environment",
      "type": "environment",
      "model": "BME280",
      "label": "BME280 온습압 센서 (I2C)",
      "protocol": "i2c",
      "libDeps": ["adafruit/Adafruit BME280 Library", "adafruit/Adafruit Unified Sensor"],
      "pinHints": ["GPIO21", "GPIO22"],
      "i2cAddresses": ["0x76", "0x77"],
      "initSnippet": "Adafruit_BME280 bme;\nbme.begin(0x76);",
      "readSnippet": "float t = bme.readTemperature();\nfloat h = bme.readHumidity();\nfloat p = bme.readPressure() / 100.0F;",
      "notes": "온습압 통합 측정, 실내 환경 모니터링 표준",
      "powerConsumption": 3.6,
      "voltage": "3.3V",
      "interface": "i2c",
      "popularity": 95
    },
    {
      "category": "environment", 
      "type": "pressure",
      "model": "BMP280",
      "label": "BMP280 기압센서 (I2C)",
      "protocol": "i2c",
      "libDeps": ["adafruit/Adafruit BMP280 Library", "adafruit/Adafruit Unified Sensor"],
      "pinHints": ["GPIO21", "GPIO22"],
      "i2cAddresses": ["0x76", "0x77"],
      "initSnippet": "Adafruit_BMP280 bmp;\nbmp.begin(0x76);",
      "readSnippet": "float t = bmp.readTemperature();\nfloat p = bmp.readPressure() / 100.0F;",
      "notes": "온압 측정, 습도 불필요할 때 경량 선택",
      "powerConsumption": 2.7,
      "voltage": "3.3V",
      "interface": "i2c",
      "popularity": 85
    },
    {
      "category": "temperature",
      "type": "temperature",
      "model": "DS18B20",
      "label": "DS18B20 온도센서 (방수 프로브)",
      "protocol": "onewire",
      "libDeps": ["paulstoffregen/OneWire", "milesburton/DallasTemperature"],
      "pinHints": ["GPIO27", "GPIO26"],
      "initSnippet": "OneWire oneWire(PIN);\nDallasTemperature sensors(&oneWire);\nsensors.begin();",
      "readSnippet": "sensors.requestTemperatures();\nfloat t = sensors.getTempCByIndex(0);",
      "notes": "수분/토양/액상에 강함, 4.7kΩ 풀업 저항 필요",
      "powerConsumption": 1.5,
      "voltage": "3.3V",
      "interface": "onewire",
      "popularity": 90
    },
    {
      "category": "environment",
      "type": "humidity", 
      "model": "DHT22",
      "label": "DHT22 온습도센서 (디지털)",
      "protocol": "digital",
      "libDeps": ["adafruit/DHT sensor library", "adafruit/Adafruit Unified Sensor"],
      "pinHints": ["GPIO27", "GPIO26"],
      "initSnippet": "DHT dht(PIN, DHT22);\ndht.begin();",
      "readSnippet": "float t = dht.readTemperature();\nfloat h = dht.readHumidity();",
      "notes": "가성비 좋은 온습도 센서, 느리지만 보편적",
      "powerConsumption": 2.5,
      "voltage": "3.3V",
      "interface": "digital",
      "popularity": 80
    },
    {
      "category": "light",
      "type": "light",
      "model": "BH1750",
      "label": "BH1750 조도센서 (I2C)",
      "protocol": "i2c",
      "libDeps": ["claws/BH1750"],
      "pinHints": ["GPIO21", "GPIO22"],
      "i2cAddresses": ["0x23", "0x5C"],
      "initSnippet": "BH1750 lightMeter;\nlightMeter.begin();",
      "readSnippet": "float lux = lightMeter.readLightLevel();",
      "notes": "외부 광량 제어에 기본, 고정밀 조도 측정",
      "powerConsumption": 0.12,
      "voltage": "3.3V",
      "interface": "i2c",
      "popularity": 75
    },
    {
      "category": "air_quality",
      "type": "co2",
      "model": "SCD30",
      "label": "SCD30 CO₂ 센서 (I2C)",
      "protocol": "i2c",
      "libDeps": ["adafruit/Adafruit SCD30"],
      "pinHints": ["GPIO21", "GPIO22"],
      "i2cAddresses": ["0x61"],
      "initSnippet": "Adafruit_SCD30 scd30;\nscd30.begin();",
      "readSnippet": "float co2 = scd30.CO2;\nfloat temp = scd30.temperature;\nfloat hum = scd30.relative_humidity;",
      "notes": "정확도 높은 CO₂ 측정, 초기 캘리브레이션 필요",
      "powerConsumption": 19,
      "voltage": "3.3V",
      "interface": "i2c",
      "popularity": 70
    },
    {
      "category": "air_quality",
      "type": "co2",
      "model": "SCD41",
      "label": "SCD41 CO₂ 센서 (저전력)",
      "protocol": "i2c",
      "libDeps": ["sparkfun/SparkFun SCD4x Arduino Library"],
      "pinHints": ["GPIO21", "GPIO22"],
      "i2cAddresses": ["0x62"],
      "initSnippet": "SensirionI2CScd4x scd4x;\nscd4x.begin(Wire);",
      "readSnippet": "uint16_t co2;\nscd4x.readMeasurement(co2, temp, hum);",
      "notes": "소형 고정밀 CO₂ 센서, 저전력 설계",
      "powerConsumption": 5,
      "voltage": "3.3V",
      "interface": "i2c",
      "popularity": 65
    },
    {
      "category": "air_quality",
      "type": "voc",
      "model": "ENS160",
      "label": "ENS160 VOC/가스센서 (I2C)",
      "protocol": "i2c",
      "libDeps": ["sparkfun/SparkFun ENS160 Arduino Library"],
      "pinHints": ["GPIO21", "GPIO22"],
      "i2cAddresses": ["0x52"],
      "initSnippet": "SparkFun_ENS160 myENS;\nmyENS.begin();",
      "readSnippet": "float aqi = myENS.getAQI();\nfloat tvoc = myENS.getTVOC();",
      "notes": "공기질 지표용 VOC 측정, AQI 제공",
      "powerConsumption": 2.7,
      "voltage": "3.3V",
      "interface": "i2c",
      "popularity": 60
    },
    {
      "category": "soil",
      "type": "moisture",
      "model": "Generic_Analog",
      "label": "토양수분센서 (아날로그)",
      "protocol": "analog",
      "libDeps": [],
      "pinHints": ["A0", "A1", "A2"],
      "initSnippet": "pinMode(PIN, INPUT);",
      "readSnippet": "int raw = analogRead(PIN);\nfloat moisture = (raw * 100.0 / 4095.0);",
      "notes": "캘리브레이션 필수, 온도 영향 고려 필요",
      "powerConsumption": 5,
      "voltage": "3.3V",
      "interface": "analog",
      "popularity": 85
    },
    {
      "category": "water",
      "type": "level",
      "model": "HC-SR04",
      "label": "HC-SR04 초음파 거리센서",
      "protocol": "ultrasonic",
      "libDeps": ["NewPing"],
      "pinHints": ["GPIO27", "GPIO26"],
      "initSnippet": "NewPing sonar(TRIG_PIN, ECHO_PIN, MAX_DISTANCE);",
      "readSnippet": "unsigned int distance = sonar.ping_cm();",
      "notes": "수조 수위 측정, 방수형 JSN-SR04T 옵션",
      "powerConsumption": 15,
      "voltage": "5V",
      "interface": "digital",
      "popularity": 80
    },
    {
      "category": "power",
      "type": "current",
      "model": "INA219",
      "label": "INA219 전류/전압 센서 (I2C)",
      "protocol": "i2c",
      "libDeps": ["adafruit/Adafruit INA219"],
      "pinHints": ["GPIO21", "GPIO22"],
      "i2cAddresses": ["0x40"],
      "initSnippet": "Adafruit_INA219 ina219;\nina219.begin();",
      "readSnippet": "float current = ina219.getCurrent_mA();\nfloat voltage = ina219.getBusVoltage_V();",
      "notes": "펌프/팬 소비전력 모니터링",
      "powerConsumption": 1,
      "voltage": "3.3V",
      "interface": "i2c",
      "popularity": 70
    },
    {
      "category": "analog",
      "type": "adc",
      "model": "ADS1115",
      "label": "ADS1115 외부 ADC (I2C)",
      "protocol": "i2c",
      "libDeps": ["adafruit/Adafruit ADS1X15"],
      "pinHints": ["GPIO21", "GPIO22"],
      "i2cAddresses": ["0x48", "0x49", "0x4A", "0x4B"],
      "initSnippet": "Adafruit_ADS1115 ads;\nads.begin();",
      "readSnippet": "int16_t adc0 = ads.readADC_SingleEnded(0);\nfloat voltage = ads.computeVolts(adc0);",
      "notes": "아날로그 다채널 확장, 고정밀 측정",
      "powerConsumption": 0.3,
      "voltage": "3.3V",
      "interface": "i2c",
      "popularity": 65
    },
    {
      "category": "motion",
      "type": "imu",
      "model": "MPU6050",
      "label": "MPU6050 IMU 센서 (자세/진동)",
      "protocol": "i2c",
      "libDeps": ["i2cdevlib"],
      "pinHints": ["GPIO21", "GPIO22"],
      "i2cAddresses": ["0x68", "0x69"],
      "initSnippet": "MPU6050 mpu;\nmpu.initialize();",
      "readSnippet": "int16_t ax, ay, az;\nmpu.getAcceleration(&ax, &ay, &az);",
      "notes": "펌프/팬 진동 감시, 자세 측정",
      "powerConsumption": 3.9,
      "voltage": "3.3V",
      "interface": "i2c",
      "popularity": 60
    },
    {
      "category": "water",
      "type": "ph",
      "model": "Generic_Analog_pH",
      "label": "pH 센서 (아날로그 보드)",
      "protocol": "analog",
      "libDeps": [],
      "pinHints": ["A0", "A1", "A2"],
      "initSnippet": "pinMode(PIN, INPUT);",
      "readSnippet": "int raw = analogRead(PIN);\nfloat voltage = raw * (3.3 / 4095.0);\nfloat ph = 7.0 - (voltage - 2.5) * 2.0;",
      "notes": "전용 보드/증폭 필요, 온도보정 필수",
      "powerConsumption": 5,
      "voltage": "3.3V",
      "interface": "analog",
      "popularity": 55
    },
    {
      "category": "water",
      "type": "ec",
      "model": "Generic_Analog_EC",
      "label": "EC 센서 (전기전도도)",
      "protocol": "analog",
      "libDeps": [],
      "pinHints": ["A0", "A1", "A2"],
      "initSnippet": "pinMode(PIN, INPUT);",
      "readSnippet": "int raw = analogRead(PIN);\nfloat voltage = raw * (3.3 / 4095.0);\nfloat ec = voltage * 1000.0;",
      "notes": "보드별 라이브러리 다양, 모델 확정 후 적용",
      "powerConsumption": 5,
      "voltage": "3.3V",
      "interface": "analog",
      "popularity": 50
    }
    {
      "type": "temperature",
      "model": "DHT22",
      "protocol": "digital",
      "libDeps": ["adafruit/DHT sensor library", "adafruit/Adafruit Unified Sensor"],
      "pinHints": ["GPIO27", "GPIO26"],
      "initSnippet": "DHT dht(PIN, DHT22);\ndht.begin();",
      "readSnippet": "float t = dht.readTemperature();\nfloat h = dht.readHumidity();",
      "notes": "3.3V 사용, 2.5mA 소비",
      "powerConsumption": 2.5
    },
    {
      "type": "temperature",
      "model": "LM35",
      "protocol": "analog",
      "libDeps": [],
      "pinHints": ["A0", "A1", "A2"],
      "initSnippet": "pinMode(PIN, INPUT);",
      "readSnippet": "int raw = analogRead(PIN);\nfloat voltage = raw * (3.3 / 4095.0);\nfloat temp = voltage * 100.0;",
      "notes": "5V 전원, 아날로그 출력",
      "powerConsumption": 0.5
    },
    {
      "type": "pressure",
      "model": "BME280",
      "protocol": "i2c",
      "i2cAddresses": ["0x76", "0x77"],
      "libDeps": ["adafruit/Adafruit BME280 Library", "adafruit/Adafruit Unified Sensor"],
      "pinHints": ["GPIO21", "GPIO22"],
      "initSnippet": "Adafruit_BME280 bme;\nbme.begin(0x76);",
      "readSnippet": "float p = bme.readPressure() / 100.0F;\nfloat t = bme.readTemperature();\nfloat h = bme.readHumidity();",
      "notes": "I2C 전용, 온습압 동시 측정",
      "powerConsumption": 3.6
    },
    {
      "type": "pressure",
      "model": "BMP280",
      "protocol": "i2c",
      "i2cAddresses": ["0x76", "0x77"],
      "libDeps": ["adafruit/Adafruit BMP280 Library", "adafruit/Adafruit Unified Sensor"],
      "pinHints": ["GPIO21", "GPIO22"],
      "initSnippet": "Adafruit_BMP280 bmp;\nbmp.begin(0x76);",
      "readSnippet": "float p = bmp.readPressure() / 100.0F;\nfloat t = bmp.readTemperature();",
      "notes": "I2C 전용, 온압 측정",
      "powerConsumption": 2.7
    },
    {
      "type": "humidity",
      "model": "DHT11",
      "protocol": "digital",
      "libDeps": ["adafruit/DHT sensor library", "adafruit/Adafruit Unified Sensor"],
      "pinHints": ["GPIO27", "GPIO26"],
      "initSnippet": "DHT dht(PIN, DHT11);\ndht.begin();",
      "readSnippet": "float h = dht.readHumidity();\nfloat t = dht.readTemperature();",
      "notes": "3.3V 사용, 저가형",
      "powerConsumption": 2.5
    },
    {
      "type": "light",
      "model": "BH1750",
      "protocol": "i2c",
      "i2cAddresses": ["0x23", "0x5C"],
      "libDeps": ["claws/BH1750"],
      "pinHints": ["GPIO21", "GPIO22"],
      "initSnippet": "BH1750 lightMeter;\nlightMeter.begin();",
      "readSnippet": "float lux = lightMeter.readLightLevel();",
      "notes": "I2C 전용, 조도 센서",
      "powerConsumption": 0.12
    },
    {
      "type": "motion",
      "model": "HC-SR501",
      "protocol": "digital",
      "libDeps": [],
      "pinHints": ["GPIO27", "GPIO26"],
      "initSnippet": "pinMode(PIN, INPUT);",
      "readSnippet": "int motion = digitalRead(PIN);",
      "notes": "5V 전원, PIR 센서",
      "powerConsumption": 65
    },
    {
      "type": "distance",
      "model": "HC-SR04",
      "protocol": "ultrasonic",
      "libDeps": ["NewPing"],
      "pinHints": ["GPIO27", "GPIO26"],
      "initSnippet": "NewPing sonar(TRIG_PIN, ECHO_PIN, MAX_DISTANCE);",
      "readSnippet": "unsigned int distance = sonar.ping_cm();",
      "notes": "5V 전원, 초음파 센서",
      "powerConsumption": 15
    },
    {
      "type": "gas",
      "model": "MQ-2",
      "protocol": "analog",
      "libDeps": [],
      "pinHints": ["A0", "A1", "A2"],
      "initSnippet": "pinMode(PIN, INPUT);",
      "readSnippet": "int raw = analogRead(PIN);\nfloat voltage = raw * (3.3 / 4095.0);",
      "notes": "5V 전원, 가스 센서",
      "powerConsumption": 800
    }
  ],
  "actuators": [
    {
      "category": "relay",
      "type": "relay",
      "model": "AC_Relay_Lamp",
      "label": "AC 램프 (릴레이 On/Off)",
      "protocol": "gpio",
      "libDeps": [],
      "pinHints": ["GPIO26", "GPIO25", "GPIO33"],
      "initSnippet": "pinMode({control}, OUTPUT);\ndigitalWrite({control}, LOW);",
      "setSnippet": "digitalWrite({control}, state ? HIGH : LOW);",
      "notes": "AC 부하 연결은 릴레이 모듈 사용, 공통 GND",
      "powerConsumption": 50,
      "voltage": "5V",
      "interface": "gpio",
      "popularity": 95,
      "safety": "AC 전원 분리 필수, 안전한 릴레이 모듈 사용"
    },
    {
      "category": "lamp",
      "type": "led",
      "model": "PWM_12V_LED",
      "label": "12V LED (MOSFET PWM)",
      "protocol": "pwm",
      "libDeps": [],
      "pinHints": ["GPIO16", "GPIO17"],
      "initSnippet": "ledcSetup(0, 1000, 8);\nledcAttachPin({pwm}, 0);\nledcWrite(0, 0);",
      "setSnippet": "ledcWrite(0, brightness /*0-255*/);",
      "notes": "외부 12V 전원, MOSFET 드라이버 사용, GND 공통",
      "powerConsumption": 200,
      "voltage": "12V",
      "interface": "pwm",
      "popularity": 85,
      "safety": "MOSFET 드라이버 보드 필수, 충분한 방열판"
    },
    {
      "category": "lamp",
      "type": "led",
      "model": "WS2812B_NeoPixel",
      "label": "WS2812B / NeoPixel Strip",
      "protocol": "onewire-like",
      "libDeps": ["adafruit/Adafruit NeoPixel"],
      "pinHints": ["GPIO27", "GPIO26"],
      "initSnippet": "#include <Adafruit_NeoPixel.h>\nAdafruit_NeoPixel strip(60, {data}, NEO_GRB + NEO_KHZ800);\nvoid initLamp(){ strip.begin(); strip.show(); }",
      "setSnippet": "strip.fill(strip.Color(r,g,b));\nstrip.show();",
      "notes": "5V 고전류 필요, 데이터 레벨시프터 권장",
      "powerConsumption": 300,
      "voltage": "5V",
      "interface": "neopixel",
      "popularity": 80,
      "safety": "고전류 전원 공급, 레벨시프터 권장"
    },
    {
      "category": "lamp",
      "type": "dimmer",
      "model": "AC_Dimmer_TRIAC",
      "label": "AC 디머 (TRIAC + ZCD)",
      "protocol": "triac",
      "libDeps": ["RobotDyn AC Dimmer"],
      "pinHints": ["GPIO32", "GPIO25"],
      "initSnippet": "RBDdimmer dimmer({zcd}, {gate});\ndimmer.begin();",
      "setSnippet": "dimmer.setPower(percent /*0-100*/);",
      "notes": "절연·안전 필수(전류 감전 위험). 상용 모듈 사용 권장",
      "powerConsumption": 100,
      "voltage": "AC",
      "interface": "triac",
      "popularity": 70,
      "safety": "⚠️ 고전압 위험! 상용 모듈 필수, 절연 주의"
    },
    {
      "category": "motor",
      "type": "dc-motor",
      "model": "TB6612_DC_Motor",
      "label": "DC 모터 (TB6612FNG 드라이버)",
      "protocol": "pwm+dir",
      "libDeps": ["sparkfun/SparkFun TB6612FNG Motor Driver Library"],
      "pinHints": ["GPIO16", "GPIO17", "GPIO18", "GPIO19"],
      "initSnippet": "TB6612FNG motor({pwm}, {in1}, {in2});\nmotor.begin();",
      "setSnippet": "motor.drive(speed, direction);",
      "notes": "TB6612FNG 드라이버 보드 필요, 외부 전원",
      "powerConsumption": 200,
      "voltage": "12V",
      "interface": "pwm+dir",
      "popularity": 90,
      "safety": "외부 전원 공급, 드라이버 보드 필수"
    },
    {
      "category": "motor",
      "type": "dc-motor",
      "model": "L298N_DC_Motor",
      "label": "DC 모터 (L298N 드라이버)",
      "protocol": "pwm+dir",
      "libDeps": [],
      "pinHints": ["GPIO16", "GPIO17", "GPIO18", "GPIO19"],
      "initSnippet": "ledcSetup(0, 1000, 8);\nledcAttachPin({pwm}, 0);\npinMode({in1}, OUTPUT);\npinMode({in2}, OUTPUT);",
      "setSnippet": "digitalWrite({in1}, dir);\ndigitalWrite({in2}, !dir);\nledcWrite(0, speed);",
      "notes": "L298N 드라이버 보드 필요, 발열 주의",
      "powerConsumption": 200,
      "voltage": "12V",
      "interface": "pwm+dir",
      "popularity": 85,
      "safety": "충분한 방열판, 외부 전원 공급"
    },
    {
      "category": "motor",
      "type": "servo",
      "model": "SG90_Servo",
      "label": "SG90 서보모터 (PWM)",
      "protocol": "pwm",
      "libDeps": ["ESP32Servo"],
      "pinHints": ["GPIO16", "GPIO17", "GPIO18"],
      "initSnippet": "Servo servo;\nservo.attach({pin});",
      "setSnippet": "servo.write(angle);",
      "notes": "5V 전원, 180도 회전, 토크 제한 주의",
      "powerConsumption": 100,
      "voltage": "5V",
      "interface": "pwm",
      "popularity": 80,
      "safety": "토크 제한, 과부하 방지"
    },
    {
      "category": "motor",
      "type": "stepper",
      "model": "A4988_Stepper",
      "label": "스테퍼모터 (A4988 드라이버)",
      "protocol": "step+dir",
      "libDeps": ["AccelStepper"],
      "pinHints": ["GPIO16", "GPIO17", "GPIO18", "GPIO19"],
      "initSnippet": "AccelStepper stepper(AccelStepper::DRIVER, {step}, {dir});\nstepper.setMaxSpeed(1000);\nstepper.setAcceleration(500);",
      "setSnippet": "stepper.moveTo(position);\nstepper.run();",
      "notes": "A4988 드라이버 보드 필요, 마이크로스텝 설정",
      "powerConsumption": 200,
      "voltage": "12V",
      "interface": "step+dir",
      "popularity": 75,
      "safety": "드라이버 보드 필수, 충분한 전원 공급"
    },
    {
      "category": "valve",
      "type": "solenoid",
      "model": "Solenoid_Valve",
      "label": "솔레노이드 밸브 (릴레이 제어)",
      "protocol": "gpio",
      "libDeps": [],
      "pinHints": ["GPIO26", "GPIO25", "GPIO33"],
      "initSnippet": "pinMode({control}, OUTPUT);\ndigitalWrite({control}, LOW);",
      "setSnippet": "digitalWrite({control}, state ? HIGH : LOW);",
      "notes": "릴레이 모듈로 제어, 플로우 제어 핵심",
      "powerConsumption": 50,
      "voltage": "12V",
      "interface": "gpio",
      "popularity": 85,
      "safety": "릴레이 모듈 필수, 외부 전원 공급"
    },
    {
      "category": "fan",
      "type": "dc-fan",
      "model": "PWM_DC_Fan",
      "label": "DC 팬 (PWM 제어)",
      "protocol": "pwm",
      "libDeps": [],
      "pinHints": ["GPIO16", "GPIO17"],
      "initSnippet": "ledcSetup(0, 1000, 8);\nledcAttachPin({pwm}, 0);\nledcWrite(0, 0);",
      "setSnippet": "ledcWrite(0, speed /*0-255*/);",
      "notes": "MOSFET 드라이버로 PWM 제어, 온습도 연동",
      "powerConsumption": 150,
      "voltage": "12V",
      "interface": "pwm",
      "popularity": 80,
      "safety": "MOSFET 드라이버 권장, 충분한 방열"
    },
    {
      "category": "pump",
      "type": "peristaltic",
      "model": "Peristaltic_Pump",
      "label": "퍼리스탈틱 펌프 (DC 드라이버)",
      "protocol": "pwm+dir",
      "libDeps": [],
      "pinHints": ["GPIO16", "GPIO17", "GPIO18", "GPIO19"],
      "initSnippet": "ledcSetup(0, 1000, 8);\nledcAttachPin({pwm}, 0);\npinMode({in1}, OUTPUT);\npinMode({in2}, OUTPUT);",
      "setSnippet": "digitalWrite({in1}, dir);\ndigitalWrite({in2}, !dir);\nledcWrite(0, speed);",
      "notes": "영양액 투입 정량, TB6612/L298N 드라이버",
      "powerConsumption": 200,
      "voltage": "12V",
      "interface": "pwm+dir",
      "popularity": 70,
      "safety": "드라이버 보드 필수, 정량 제어 주의"
    },
    {
      "category": "relay",
      "type": "ssr",
      "model": "Solid_State_Relay",
      "label": "솔리드스테이트릴레이 (SSR)",
      "protocol": "gpio",
      "libDeps": [],
      "pinHints": ["GPIO26", "GPIO25", "GPIO33"],
      "initSnippet": "pinMode({control}, OUTPUT);\ndigitalWrite({control}, LOW);",
      "setSnippet": "digitalWrite({control}, state ? HIGH : LOW);",
      "notes": "고빈도 On/Off에 유리, 발열 주의",
      "powerConsumption": 30,
      "voltage": "3.3V",
      "interface": "gpio",
      "popularity": 65,
      "safety": "충분한 방열판, 발열 모니터링"
    },
    {
      "category": "indicator",
      "type": "led",
      "model": "Generic_LED",
      "label": "일반 LED (PWM/GPIO)",
      "protocol": "pwm",
      "libDeps": [],
      "pinHints": ["GPIO26", "GPIO25", "GPIO33"],
      "initSnippet": "pinMode({pin}, OUTPUT);\ndigitalWrite({pin}, LOW);",
      "setSnippet": "digitalWrite({pin}, state ? HIGH : LOW);",
      "notes": "3.3V LED, 저항 필요, 상태 표시용",
      "powerConsumption": 20,
      "voltage": "3.3V",
      "interface": "gpio",
      "popularity": 90,
      "safety": "저항 필수, 전류 제한"
    },
    {
      "category": "alarm",
      "type": "buzzer",
      "model": "PWM_Buzzer",
      "label": "부저 (PWM 제어)",
      "protocol": "pwm",
      "libDeps": [],
      "pinHints": ["GPIO16", "GPIO17", "GPIO18"],
      "initSnippet": "ledcSetup(0, 2000, 8);\nledcAttachPin({pin}, 0);",
      "setSnippet": "ledcWriteTone(0, frequency);",
      "notes": "5V 부저, PWM 제어, 알람/알림용",
      "powerConsumption": 30,
      "voltage": "5V",
      "interface": "pwm",
      "popularity": 75,
      "safety": "적절한 주파수 범위, 소음 주의"
    }
    {
      "type": "dc-motor",
      "model": "tb6612",
      "protocol": "pwm+dir",
      "libDeps": [],
      "pinHints": ["GPIO16", "GPIO17", "GPIO18"],
      "initSnippet": "ledcSetup(CH, 1000, 8);\nledcAttachPin(PWM_PIN, CH);\npinMode(IN1, OUTPUT);\npinMode(IN2, OUTPUT);",
      "setSnippet": "digitalWrite(IN1, dir);\ndigitalWrite(IN2, !dir);\nledcWrite(CH, speed);",
      "notes": "TB6612FNG 드라이버 보드 필요",
      "powerConsumption": 200
    },
    {
      "type": "dc-motor",
      "model": "l298n",
      "protocol": "pwm+dir",
      "libDeps": [],
      "pinHints": ["GPIO16", "GPIO17", "GPIO18"],
      "initSnippet": "ledcSetup(CH, 1000, 8);\nledcAttachPin(PWM_PIN, CH);\npinMode(IN1, OUTPUT);\npinMode(IN2, OUTPUT);",
      "setSnippet": "digitalWrite(IN1, dir);\ndigitalWrite(IN2, !dir);\nledcWrite(CH, speed);",
      "notes": "L298N 드라이버 보드 필요",
      "powerConsumption": 200
    },
    {
      "type": "servo",
      "model": "sg90",
      "protocol": "pwm",
      "libDeps": ["ESP32Servo"],
      "pinHints": ["GPIO16", "GPIO17", "GPIO18"],
      "initSnippet": "Servo servo;\nservo.attach(PIN);",
      "setSnippet": "servo.write(angle);",
      "notes": "5V 전원, 180도 회전",
      "powerConsumption": 100
    },
    {
      "type": "stepper",
      "model": "28byj48",
      "protocol": "step+dir",
      "libDeps": ["AccelStepper"],
      "pinHints": ["GPIO16", "GPIO17", "GPIO18", "GPIO19"],
      "initSnippet": "AccelStepper stepper(AccelStepper::FULL4WIRE, IN1, IN3, IN2, IN4);\nstepper.setMaxSpeed(1000);\nstepper.setAcceleration(500);",
      "setSnippet": "stepper.moveTo(position);\nstepper.run();",
      "notes": "ULN2003 드라이버 보드 필요",
      "powerConsumption": 200
    },
    {
      "type": "led",
      "model": "generic_led",
      "protocol": "gpio",
      "libDeps": [],
      "pinHints": ["GPIO26", "GPIO25", "GPIO33"],
      "initSnippet": "pinMode(PIN, OUTPUT);\ndigitalWrite(PIN, LOW);",
      "setSnippet": "digitalWrite(PIN, state ? HIGH : LOW);",
      "notes": "3.3V LED, 저항 필요",
      "powerConsumption": 20
    },
    {
      "type": "buzzer",
      "model": "generic_buzzer",
      "protocol": "pwm",
      "libDeps": [],
      "pinHints": ["GPIO16", "GPIO17", "GPIO18"],
      "initSnippet": "ledcSetup(CH, 2000, 8);\nledcAttachPin(PIN, CH);",
      "setSnippet": "ledcWriteTone(CH, frequency);",
      "notes": "5V 부저, PWM 제어",
      "powerConsumption": 30
    }
  ]
}
